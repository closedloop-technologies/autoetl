# generated by datamodel-codegen:
#   filename:  openapi_spec_20.json
#   timestamp: 2024-03-21T00:53:25+00:00

from __future__ import annotations

from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class FieldX(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PatternProperties(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Swagger(BaseModel):
    type: str
    enum: List[str]
    description: str


class Info(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Host(BaseModel):
    type: str
    pattern: str
    description: str


class BasePath(BaseModel):
    type: str
    pattern: str
    description: str


class Schemes(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllOfItem(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Consumes(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Produces(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Paths(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Definitions(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Parameters(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Responses(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Security(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class SecurityDefinitions(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Items(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Tags(BaseModel):
    type: str
    items: Items
    uniqueItems: bool


class ExternalDocs(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties(BaseModel):
    swagger: Swagger
    info: Info
    host: Host
    basePath: BasePath
    schemes: Schemes
    consumes: Consumes
    produces: Produces
    paths: Paths
    definitions: Definitions
    parameters: Parameters
    responses: Responses
    security: Security
    securityDefinitions: SecurityDefinitions
    tags: Tags
    externalDocs: ExternalDocs


class PatternProperties1(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Title(BaseModel):
    type: str
    description: str


class Version(BaseModel):
    type: str
    description: str


class Description(BaseModel):
    type: str
    description: str


class TermsOfService(BaseModel):
    type: str
    description: str


class Contact(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class License(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties1(BaseModel):
    title: Title
    version: Version
    description: Description
    termsOfService: TermsOfService
    contact: Contact
    license: License


class Info1(BaseModel):
    type: str
    description: str
    required: List[str]
    additionalProperties: bool
    patternProperties: PatternProperties1
    properties: Properties1


class Name(BaseModel):
    type: str
    description: str


class Url(BaseModel):
    type: str
    description: str
    format: str


class Email(BaseModel):
    type: str
    description: str
    format: str


class Properties2(BaseModel):
    name: Name
    url: Url
    email: Email


class PatternProperties2(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Contact1(BaseModel):
    type: str
    description: str
    additionalProperties: bool
    properties: Properties2
    patternProperties: PatternProperties2


class Properties3(BaseModel):
    name: Name
    url: Url


class PatternProperties3(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class License1(BaseModel):
    type: str
    required: List[str]
    additionalProperties: bool
    properties: Properties3
    patternProperties: PatternProperties3


class FieldModel(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PatternProperties4(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')
    field__: FieldModel = Field(..., alias='^/')


class Paths1(BaseModel):
    type: str
    description: str
    patternProperties: PatternProperties4
    additionalProperties: bool


class AdditionalProperties(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Definitions2(BaseModel):
    type: str
    additionalProperties: AdditionalProperties
    description: str


class ParameterDefinitions(BaseModel):
    type: str
    additionalProperties: AdditionalProperties
    description: str


class ResponseDefinitions(BaseModel):
    type: str
    additionalProperties: AdditionalProperties
    description: str


class Description1(BaseModel):
    type: str


class Url2(BaseModel):
    type: str
    format: str


class Properties4(BaseModel):
    description: Description1
    url: Url2


class PatternProperties5(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class ExternalDocs1(BaseModel):
    type: str
    additionalProperties: bool
    description: str
    required: List[str]
    properties: Properties4
    patternProperties: PatternProperties5


class Examples(BaseModel):
    type: str
    additionalProperties: bool


class MimeType(BaseModel):
    type: str
    description: str


class PatternProperties6(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Items1(BaseModel):
    type: str


class Tags1(BaseModel):
    type: str
    items: Items1
    uniqueItems: bool


class Summary(BaseModel):
    type: str
    description: str


class Description2(BaseModel):
    type: str
    description: str


class ExternalDocs2(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class OperationId(BaseModel):
    type: str
    description: str


class Produces1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Consumes1(BaseModel):
    description: str
    allOf: List[AllOfItem]


class Deprecated(BaseModel):
    type: str
    default: bool


class Properties5(BaseModel):
    tags: Tags1
    summary: Summary
    description: Description2
    externalDocs: ExternalDocs2
    operationId: OperationId
    produces: Produces1
    consumes: Consumes1
    parameters: Parameters
    responses: Responses
    schemes: Schemes
    deprecated: Deprecated
    security: Security


class Operation(BaseModel):
    type: str
    required: List[str]
    additionalProperties: bool
    patternProperties: PatternProperties6
    properties: Properties5


class PatternProperties7(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class FieldRef(BaseModel):
    type: str


class Get(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Put(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Post(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Delete(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Options(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Head(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Patch(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties6(BaseModel):
    field_ref: FieldRef = Field(..., alias='$ref')
    get: Get
    put: Put
    post: Post
    delete: Delete
    options: Options
    head: Head
    patch: Patch
    parameters: Parameters


class PathItem(BaseModel):
    type: str
    additionalProperties: bool
    patternProperties: PatternProperties7
    properties: Properties6


class Field093Default(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class PatternProperties8(BaseModel):
    field___0_9__3______default__: Field093Default = Field(
        ..., alias='^([0-9]{3})$|^(default)$'
    )
    field_x_: FieldX = Field(..., alias='^x-')


class PatternProperties9(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Not(BaseModel):
    type: str
    additionalProperties: bool
    patternProperties: PatternProperties9


class Responses2(BaseModel):
    type: str
    description: str
    minProperties: int
    additionalProperties: bool
    patternProperties: PatternProperties8
    not_: Not = Field(..., alias='not')


class OneOfItem(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ResponseValue(BaseModel):
    oneOf: List[OneOfItem]


class Description3(BaseModel):
    type: str


class Schema(BaseModel):
    oneOf: List[OneOfItem]


class Headers(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Examples1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties7(BaseModel):
    description: Description3
    schema_: Schema = Field(..., alias='schema')
    headers: Headers
    examples: Examples1


class PatternProperties10(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Response(BaseModel):
    type: str
    required: List[str]
    properties: Properties7
    additionalProperties: bool
    patternProperties: PatternProperties10


class Headers1(BaseModel):
    type: str
    additionalProperties: AdditionalProperties


class Type(BaseModel):
    type: str
    enum: List[str]


class Format(BaseModel):
    type: str


class Items2(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class CollectionFormat(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Default(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Maximum(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExclusiveMaximum(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Minimum(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class ExclusiveMinimum(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MaxLength(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MinLength(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Pattern(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MaxItems(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MinItems(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class UniqueItems(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Enum(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MultipleOf(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties8(BaseModel):
    type: Type
    format: Format
    items: Items2
    collectionFormat: CollectionFormat
    default: Default
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    multipleOf: MultipleOf
    description: Description3


class PatternProperties11(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Header(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties8
    patternProperties: PatternProperties11


class VendorExtension(BaseModel):
    description: str
    additionalProperties: bool
    additionalItems: bool


class PatternProperties12(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Description5(BaseModel):
    type: str
    description: str


class In(BaseModel):
    type: str
    description: str
    enum: List[str]


class Required(BaseModel):
    type: str
    description: str
    default: bool


class Schema1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties9(BaseModel):
    description: Description5
    name: Name
    in_: In = Field(..., alias='in')
    required: Required
    schema_: Schema1 = Field(..., alias='schema')


class BodyParameter(BaseModel):
    type: str
    required: List[str]
    patternProperties: PatternProperties12
    properties: Properties9
    additionalProperties: bool


class PatternProperties13(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Properties10(BaseModel):
    required: Required
    in_: In = Field(..., alias='in')
    description: Description5
    name: Name
    type: Type
    format: Format
    items: Items2
    collectionFormat: CollectionFormat
    default: Default
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    multipleOf: MultipleOf


class HeaderParameterSubSchema(BaseModel):
    additionalProperties: bool
    patternProperties: PatternProperties13
    properties: Properties10


class PatternProperties14(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class AllowEmptyValue(BaseModel):
    type: str
    default: bool
    description: str


class Properties11(BaseModel):
    required: Required
    in_: In = Field(..., alias='in')
    description: Description5
    name: Name
    allowEmptyValue: AllowEmptyValue
    type: Type
    format: Format
    items: Items2
    collectionFormat: CollectionFormat
    default: Default
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    multipleOf: MultipleOf


class QueryParameterSubSchema(BaseModel):
    additionalProperties: bool
    patternProperties: PatternProperties14
    properties: Properties11


class PatternProperties15(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Properties12(BaseModel):
    required: Required
    in_: In = Field(..., alias='in')
    description: Description5
    name: Name
    allowEmptyValue: AllowEmptyValue
    type: Type
    format: Format
    items: Items2
    collectionFormat: CollectionFormat
    default: Default
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    multipleOf: MultipleOf


class FormDataParameterSubSchema(BaseModel):
    additionalProperties: bool
    patternProperties: PatternProperties15
    properties: Properties12


class PatternProperties16(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Required4(BaseModel):
    type: str
    enum: List[bool]
    description: str


class Properties13(BaseModel):
    required: Required4
    in_: In = Field(..., alias='in')
    description: Description5
    name: Name
    type: Type
    format: Format
    items: Items2
    collectionFormat: CollectionFormat
    default: Default
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    multipleOf: MultipleOf


class PathParameterSubSchema(BaseModel):
    additionalProperties: bool
    patternProperties: PatternProperties16
    required: List[str]
    properties: Properties13


class NonBodyParameter(BaseModel):
    type: str
    required: List[str]
    oneOf: List[OneOfItem]


class Parameter(BaseModel):
    oneOf: List[OneOfItem]


class PatternProperties17(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Title1(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Description10(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MaxProperties(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MinProperties(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Required5(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AnyOfItem(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    type: Optional[str] = None


class AdditionalProperties4(BaseModel):
    anyOf: List[AnyOfItem]
    default: Dict[str, Any]


class Type5(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AnyOfItem1(BaseModel):
    field_ref: Optional[str] = Field(None, alias='$ref')
    type: Optional[str] = None
    minItems: Optional[int] = None
    items: Optional[Items2] = None


class Items7(BaseModel):
    anyOf: List[AnyOfItem1]
    default: Dict[str, Any]


class Items9(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AllOf(BaseModel):
    type: str
    minItems: int
    items: Items9


class AdditionalProperties5(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties15(BaseModel):
    type: str
    additionalProperties: AdditionalProperties5
    default: Dict[str, Any]


class Discriminator(BaseModel):
    type: str


class ReadOnly(BaseModel):
    type: str
    default: bool


class Xml(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties14(BaseModel):
    field_ref: FieldRef = Field(..., alias='$ref')
    format: Format
    title: Title1
    description: Description10
    default: Default
    multipleOf: MultipleOf
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    maxProperties: MaxProperties
    minProperties: MinProperties
    required: Required5
    enum: Enum
    additionalProperties: AdditionalProperties4
    type: Type5
    items: Items7
    allOf: AllOf
    properties: Properties15
    discriminator: Discriminator
    readOnly: ReadOnly
    xml: Xml
    externalDocs: ExternalDocs2
    example: Dict[str, Any]


class Schema2(BaseModel):
    type: str
    description: str
    patternProperties: PatternProperties17
    properties: Properties14
    additionalProperties: bool


class PatternProperties18(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Type6(BaseModel):
    type: str
    enum: List[str]


class Properties16(BaseModel):
    format: Format
    title: Title1
    description: Description10
    default: Default
    required: Required5
    type: Type6
    readOnly: ReadOnly
    externalDocs: ExternalDocs2
    example: Dict[str, Any]


class FileSchema(BaseModel):
    type: str
    description: str
    patternProperties: PatternProperties18
    required: List[str]
    properties: Properties16
    additionalProperties: bool


class Properties17(BaseModel):
    type: Type6
    format: Format
    items: Items9
    collectionFormat: CollectionFormat
    default: Default
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    multipleOf: MultipleOf


class PatternProperties19(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class PrimitivesItems(BaseModel):
    type: str
    additionalProperties: bool
    properties: Properties17
    patternProperties: PatternProperties19


class Security2(BaseModel):
    type: str
    items: Items9
    uniqueItems: bool


class Items12(BaseModel):
    type: str


class AdditionalProperties6(BaseModel):
    type: str
    items: Items12
    uniqueItems: bool


class SecurityRequirement(BaseModel):
    type: str
    additionalProperties: AdditionalProperties6


class Name7(BaseModel):
    type: str


class Namespace(BaseModel):
    type: str


class Prefix(BaseModel):
    type: str


class Attribute(BaseModel):
    type: str
    default: bool


class Wrapped(BaseModel):
    type: str
    default: bool


class Properties18(BaseModel):
    name: Name7
    namespace: Namespace
    prefix: Prefix
    attribute: Attribute
    wrapped: Wrapped


class PatternProperties20(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Xml1(BaseModel):
    type: str
    additionalProperties: bool
    properties: Properties18
    patternProperties: PatternProperties20


class Description12(BaseModel):
    type: str


class Properties19(BaseModel):
    name: Name7
    description: Description12
    externalDocs: ExternalDocs2


class PatternProperties21(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Tag(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties19
    patternProperties: PatternProperties21


class AdditionalProperties7(BaseModel):
    oneOf: List[OneOfItem]


class SecurityDefinitions1(BaseModel):
    type: str
    additionalProperties: AdditionalProperties7


class Properties20(BaseModel):
    type: Type6
    description: Description12


class PatternProperties22(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class BasicAuthenticationSecurity(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties20
    patternProperties: PatternProperties22


class In5(BaseModel):
    type: str
    enum: List[str]


class Properties21(BaseModel):
    type: Type6
    name: Name7
    in_: In5 = Field(..., alias='in')
    description: Description12


class PatternProperties23(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class ApiKeySecurity(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties21
    patternProperties: PatternProperties23


class Flow(BaseModel):
    type: str
    enum: List[str]


class Scopes(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class AuthorizationUrl(BaseModel):
    type: str
    format: str


class Properties22(BaseModel):
    type: Type6
    flow: Flow
    scopes: Scopes
    authorizationUrl: AuthorizationUrl
    description: Description12


class PatternProperties24(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Oauth2ImplicitSecurity(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties22
    patternProperties: PatternProperties24


class TokenUrl(BaseModel):
    type: str
    format: str


class Properties23(BaseModel):
    type: Type6
    flow: Flow
    scopes: Scopes
    tokenUrl: TokenUrl
    description: Description12


class PatternProperties25(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Oauth2PasswordSecurity(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties23
    patternProperties: PatternProperties25


class Properties24(BaseModel):
    type: Type6
    flow: Flow
    scopes: Scopes
    tokenUrl: TokenUrl
    description: Description12


class PatternProperties26(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Oauth2ApplicationSecurity(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties24
    patternProperties: PatternProperties26


class Properties25(BaseModel):
    type: Type6
    flow: Flow
    scopes: Scopes
    authorizationUrl: AuthorizationUrl
    tokenUrl: TokenUrl
    description: Description12


class PatternProperties27(BaseModel):
    field_x_: FieldX = Field(..., alias='^x-')


class Oauth2AccessCodeSecurity(BaseModel):
    type: str
    additionalProperties: bool
    required: List[str]
    properties: Properties25
    patternProperties: PatternProperties27


class AdditionalProperties8(BaseModel):
    type: str


class Oauth2Scopes(BaseModel):
    type: str
    additionalProperties: AdditionalProperties8


class Items13(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class MediaTypeList(BaseModel):
    type: str
    items: Items13
    uniqueItems: bool


class Items14(BaseModel):
    oneOf: List[OneOfItem]


class ParametersList(BaseModel):
    type: str
    description: str
    additionalItems: bool
    items: Items14
    uniqueItems: bool


class Items15(BaseModel):
    type: str
    enum: List[str]


class SchemesList(BaseModel):
    type: str
    description: str
    items: Items15
    uniqueItems: bool


class CollectionFormat6(BaseModel):
    type: str
    enum: List[str]
    default: str


class CollectionFormatWithMulti(BaseModel):
    type: str
    enum: List[str]
    default: str


class Description19(BaseModel):
    field_ref: str = Field(..., alias='$ref')


class Properties26(BaseModel):
    field_ref: FieldRef = Field(..., alias='$ref')


class JsonReference(BaseModel):
    type: str
    required: List[str]
    additionalProperties: bool
    properties: Properties26


class Definitions1(BaseModel):
    info: Info1
    contact: Contact1
    license: License1
    paths: Paths1
    definitions: Definitions2
    parameterDefinitions: ParameterDefinitions
    responseDefinitions: ResponseDefinitions
    externalDocs: ExternalDocs1
    examples: Examples
    mimeType: MimeType
    operation: Operation
    pathItem: PathItem
    responses: Responses2
    responseValue: ResponseValue
    response: Response
    headers: Headers1
    header: Header
    vendorExtension: VendorExtension
    bodyParameter: BodyParameter
    headerParameterSubSchema: HeaderParameterSubSchema
    queryParameterSubSchema: QueryParameterSubSchema
    formDataParameterSubSchema: FormDataParameterSubSchema
    pathParameterSubSchema: PathParameterSubSchema
    nonBodyParameter: NonBodyParameter
    parameter: Parameter
    schema_: Schema2 = Field(..., alias='schema')
    fileSchema: FileSchema
    primitivesItems: PrimitivesItems
    security: Security2
    securityRequirement: SecurityRequirement
    xml: Xml1
    tag: Tag
    securityDefinitions: SecurityDefinitions1
    basicAuthenticationSecurity: BasicAuthenticationSecurity
    apiKeySecurity: ApiKeySecurity
    oauth2ImplicitSecurity: Oauth2ImplicitSecurity
    oauth2PasswordSecurity: Oauth2PasswordSecurity
    oauth2ApplicationSecurity: Oauth2ApplicationSecurity
    oauth2AccessCodeSecurity: Oauth2AccessCodeSecurity
    oauth2Scopes: Oauth2Scopes
    mediaTypeList: MediaTypeList
    parametersList: ParametersList
    schemesList: SchemesList
    collectionFormat: CollectionFormat6
    collectionFormatWithMulti: CollectionFormatWithMulti
    title: Title1
    description: Description19
    default: Default
    multipleOf: MultipleOf
    maximum: Maximum
    exclusiveMaximum: ExclusiveMaximum
    minimum: Minimum
    exclusiveMinimum: ExclusiveMinimum
    maxLength: MaxLength
    minLength: MinLength
    pattern: Pattern
    maxItems: MaxItems
    minItems: MinItems
    uniqueItems: UniqueItems
    enum: Enum
    jsonReference: JsonReference


class Model(BaseModel):
    title: str
    id: str
    field_schema: str = Field(..., alias='$schema')
    type: str
    required: List[str]
    additionalProperties: bool
    patternProperties: PatternProperties
    properties: Properties
    definitions: Definitions1
